# /srv/salt/malware_demo/term_snail.sls
#
# Purpose: Find and terminate any process whose command line contains the word “snail”.
#  Note that this uses a SIGTERM so that the ptocess can catch and respond with a "Killed with Salt" message
#
# The state is idempotent: if no matching process exists, the run succeeds silently.

{% set proc_name = "snail" %}

# 1. Gather a list of matching PIDs using the built-in `ps` execution module.

#    `ps aux` returns a list of dictionaries; we filter on the “cmd” field.
{% set matching = salt['ps.pgrep'](proc_name) %}

# 2. If the list is empty, skip the kill step entirely.

{% if matching %}
kill_{{ proc_name }}_processes:
  # The `cmd.run state executes a shell command on the minion.
  # We build a single `kill -15 <pid1> <pid2> ...` line.
  # this is a kinder "terminate" request for the demo
  cmd.run:
    - name: kill -15 {{ matching|join(' ') }}
    - cwd: /
    - hide_output: False          # show the command output in the Salt log
{% else %}
# No matching processes: create a “noop” state so the run reports success.
snail_not_found:
  test.succeed_without_changes:
    - name: "No '{{ proc_name }}s' found!"
{% endif %}

